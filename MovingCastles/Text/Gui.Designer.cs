//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovingCastles.Text {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Gui {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Gui() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MovingCastles.Text.Gui", typeof(Gui).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keys:
        ///(e), (Enter)
        ///
        ///Brings up an overlay highlighting any adjacent objects that can be interacted with. Use the numpad to choose a direction, or (5) to choose the player&apos;s tile. If there is only one possible selection, pressing (e) or (Enter) again selects it..
        /// </summary>
        internal static string Command_Interact {
            get {
                return ResourceManager.GetString("Command_Interact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move with the numpad:
        ///
        ///\ | /
        ///- o -
        //// | \
        ///
        ///Tip:
        ///The center of the numpad (5) is used for waiting..
        /// </summary>
        internal static string Command_Movement {
            get {
                return ResourceManager.GetString("Command_Movement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move with the numpad.
        ///Rest with the middle of the numpad (5).
        ///Interact with (e) or (Enter).
        ///
        ///Mouse: (TODO)
        ///Left-click to move and attack.
        ///Right-click to inspect..
        /// </summary>
        internal static string Command_Overview {
            get {
                return ResourceManager.GetString("Command_Overview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keys:
        ///(z), (5), (.)
        ///
        ///Skip a turn.
        ///
        ///Tip:
        ///Wait to regain health or wait for the right time to strike, but remember that there is a limited amount of time in each day!.
        /// </summary>
        internal static string Command_Wait {
            get {
                return ResourceManager.GetString("Command_Wait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crystalized by the precise artistry of master artificers, etherium is the closest thing you can get to the pure substance of the Torrent..
        /// </summary>
        internal static string Item_EtheriumShard_Desc {
            get {
                return ResourceManager.GetString("Item_EtheriumShard_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut from the sacred woods of the Kurisau Oasis, this staff has served you since you first learned to sense the Wellspring..
        /// </summary>
        internal static string Item_StarterOakStaff_Desc {
            get {
                return ResourceManager.GetString("Item_StarterOakStaff_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nobleman&apos;s weapon of war, with a well-used leather grip and a blade of the finest Ayeni steel..
        /// </summary>
        internal static string Item_SteelLongsword_Desc {
            get {
                return ResourceManager.GetString("Item_SteelLongsword_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To manifest the power of the wellspring in flame is as natural as breath for the magi..
        /// </summary>
        internal static string Spell_ConjureFlame_Desc {
            get {
                return ResourceManager.GetString("Spell_ConjureFlame_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A most practical application of basic realmatic attunement. The magus steps briefly into the ethereal realm, utilizes a split second of mental movement, and re-enters the material plane at a nearby place..
        /// </summary>
        internal static string Spell_EtherealStep_Desc {
            get {
                return ResourceManager.GetString("Spell_EtherealStep_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A payload of raw fire, deftly contained in air. It explodes on impact..
        /// </summary>
        internal static string Spell_Fireball_Desc {
            get {
                return ResourceManager.GetString("Spell_Fireball_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The will of the magi evokes the frigid air of winter. A twisting beam of freezing wind shoots forth, driving the warmth of life from anything in its path..
        /// </summary>
        internal static string Spell_FreezingWind_Desc {
            get {
                return ResourceManager.GetString("Spell_FreezingWind_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The bodies of mortals are but dust and water. Thus, a careful weaving of physical elements may push the flesh beyond its normal limits..
        /// </summary>
        internal static string Spell_Haste_Desc {
            get {
                return ResourceManager.GetString("Spell_Haste_Desc", resourceCulture);
            }
        }
    }
}
